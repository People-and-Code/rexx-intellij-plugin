FILE
  PsiComment(SHEBANG)('#! /usr/bin/env rexx')
  PsiElement(TERMINATOR)('\n')
  PsiComment(MULTILINE_COMMENT)('/* This is a multiline comment\n   It can span multiple lines */')
  PsiElement(TERMINATOR)('\n\n')
  RexxSayInstructionImpl(SAY_INSTRUCTION)
    PsiElement(SAY)('say')
    PsiWhiteSpace(' ')
    RexxTermExprImpl(TERM_EXPR)
      RexxStringLiteralImpl(STRING_LITERAL)
        PsiElement(STRING)(''Hello, World!'')
  PsiWhiteSpace('  ')
  PsiComment(LINE_COMMENT)('-- This is an in-line comment')
  PsiElement(TERMINATOR)('\n\n')
  PsiComment(LINE_COMMENT)('-- This is a single line comment')
  PsiElement(TERMINATOR)('\n\n')
  RexxIfInstructionImpl(IF_INSTRUCTION)
    PsiElement(IF)('if')
    PsiWhiteSpace(' ')
    RexxAndExprImpl(AND_EXPR)
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('true')
      PsiComment(LINE_COMMENT)(', -- comment should not break line continuation\n')
      PsiElement(OPERATOR_BITWISE_AND)('&')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('false')
    PsiWhiteSpace(' ')
    PsiElement(THEN)('then')
    PsiWhiteSpace(' ')
    RexxSayInstructionImpl(SAY_INSTRUCTION)
      PsiElement(SAY)('say')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxStringLiteralImpl(STRING_LITERAL)
          PsiElement(STRING)(''false'')
  PsiElement(TERMINATOR)('\n\n')
  RexxIfInstructionImpl(IF_INSTRUCTION)
    PsiElement(IF)('if')
    PsiWhiteSpace(' ')
    RexxAndExprImpl(AND_EXPR)
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('true')
      PsiComment(MULTILINE_COMMENT)(', /*comment should not break line continuation*/\n')
      PsiElement(OPERATOR_BITWISE_AND)('&')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('false')
    PsiWhiteSpace(' ')
    PsiElement(THEN)('then')
    PsiWhiteSpace(' ')
    RexxSayInstructionImpl(SAY_INSTRUCTION)
      PsiElement(SAY)('say')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxStringLiteralImpl(STRING_LITERAL)
          PsiElement(STRING)(''false'')
  PsiElement(TERMINATOR)('\n\n')
  RexxIfInstructionImpl(IF_INSTRUCTION)
    PsiElement(IF)('if')
    PsiWhiteSpace(' ')
    RexxAndExprImpl(AND_EXPR)
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('true')
      PsiComment(MULTILINE_COMMENT)(', /*comments should*/ /*not break line continuation*/\n')
      PsiElement(OPERATOR_BITWISE_AND)('&')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxVariableImpl(VARIABLE)
          RexxIdentifier_Impl(IDENTIFIER_)
            PsiElement(IDENTIFIER)('false')
    PsiWhiteSpace(' ')
    PsiElement(THEN)('then')
    PsiWhiteSpace(' ')
    RexxSayInstructionImpl(SAY_INSTRUCTION)
      PsiElement(SAY)('say')
      PsiWhiteSpace(' ')
      RexxTermExprImpl(TERM_EXPR)
        RexxStringLiteralImpl(STRING_LITERAL)
          PsiElement(STRING)(''false'')